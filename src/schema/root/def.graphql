
scalar JSON

enum UserStatus {
  online
  offline
}

input UserStatusInput {
  userId: ID!
  status: UserStatus
}

input UserInput {
  userId: ID
}

input UserListInput {
  userIds: [ID]
}

input AddFriendInput {
  userId: ID!
  friendId: ID!
}

input AddGamePlayedInput {
  userId: ID!
  gameTitle: String!
  gamePlatform: String!
  gamerTag: String
}

input EditGamePlayedInput {
  id: ID!
  userId: ID
  gameTitle: String
  gamePlatform: String
  gamerTag: String
}

type UserStatusInfo {
  userId: ID!
  status: UserStatus
}

type AddFriendResult {
  userId: ID
  friendId: ID
}

type Query {
  # Fetch a specific user by ID
  user(id: ID!): User

  # Fetch all users
  users: [User]

  # Fetch the current logged-in user
  currentUser: User

  # Fetch user login records
  logins: [UserLogin]

  # Fetch all games played
  gamesPlayed: [GamePlayed]
}

type Mutation {
  # Sets a user's online / offline status
  setUserOnlineStatus(input: UserStatusInput!): UserStatusInfo

  # Adds a friend to a user
  addFriendToUser(input: AddFriendInput!): AddFriendResult

  # Randomly generate a new user and add to specified user's friends list
  createFriendForUser(id: ID!): User

  # Adds a game that a user has played
  addGamePlayed(input: AddGamePlayedInput!): GamePlayed

  # Edits an existing game that a user has played
  editGamePlayed(input: EditGamePlayedInput!): GamePlayed

  # Deletes an existing game that a user has played
  deleteGamePlayed(id: ID!): ID
}

type Subscription {
  # Is triggered when a user's online / offline status changes
  userOnlineStatusChanged(input: UserListInput): UserStatusInfo
}
